<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='business_info_cleaned_04.19.20' inline='true' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='business_info_cleaned_04.19.20' name='textscan.1xgkd7g0ap8lug1cvv7lv1q1imp2'>
            <connection class='textscan' directory='C:/Users/shaile/Downloads' filename='business_info_cleaned_04.19.20.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1xgkd7g0ap8lug1cvv7lv1q1imp2' name='business_info_cleaned_04.19.20.csv' table='[business_info_cleaned_04.19.20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='business_id' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='postal_code' ordinal='4' />
            <column datatype='real' name='latitude' ordinal='5' />
            <column datatype='real' name='longitude' ordinal='6' />
            <column datatype='integer' name='review_count' ordinal='7' />
            <column datatype='string' name='EthnicType' ordinal='8' />
            <column datatype='string' name='stars' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>review_count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EthnicType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EthnicType]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>EthnicType</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[business_info_cleaned_04.19.20.csv]</parent-name>
            <remote-alias>stars</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ethnic Type' datatype='string' name='[EthnicType]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Number of Records]' role='dimension' type='nominal' user:auto-column='numrec'>
        <calculation class='tableau' formula='STR(1)' />
      </column>
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
      <column aggregation='None' caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='None' caption='Postal Code' datatype='integer' default-format='*00000' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Stars' datatype='string' name='[stars]' role='dimension' type='nominal' />
      <column aggregation='None' caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[postal_code]' derivation='None' name='[none:postal_code:ok]' pivot='key' type='ordinal' />
      <column-instance column='[stars]' derivation='None' name='[none:stars:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Postal Code,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:postal_code:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.548092' measure-ordering='alphabetic' measure-percentage='0.451908' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:stars:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2.5&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;3.5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1.5&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;4.5&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='AZ_'>
      <table>
        <view>
          <datasources>
            <datasource caption='business_info_cleaned_04.19.20' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ss9rk404sbe1r1b8tz7w02hijip'>
            <column-instance column='[postal_code]' derivation='None' name='[none:postal_code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stars]' derivation='None' name='[none:stars:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='Postal Code' datatype='integer' default-format='*00000' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Stars' datatype='string' name='[stars]' role='dimension' type='nominal' />
            <column aggregation='None' caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[review_count]' derivation='Sum' name='[sum:review_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Inclusions (Postal Code,State)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85001' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85003' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85004' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85006' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85007' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85008' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85009' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85012' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85013' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85014' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85015' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85016' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85017' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85018' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85019' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85020' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85021' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85022' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85023' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85024' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85027' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85028' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85029' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85031' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85032' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85033' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85034' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85035' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85037' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85040' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85041' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85042' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85043' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85044' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85048' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85050' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85051' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85053' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85054' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85073' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85083' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85085' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85086' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85225' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85303' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85310' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85339' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85388' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89014' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89018' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89019' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89030' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89031' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89032' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89044' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89052' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89081' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89084' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89101' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89102' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89103' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89104' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89106' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89107' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89108' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89109' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89110' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89111' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89113' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89115' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89117' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89118' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89119' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89120' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89121' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89122' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89123' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89124' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89128' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89129' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89130' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89131' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89134' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89135' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89136' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89138' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89139' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89141' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89142' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89143' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89144' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89145' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89146' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89147' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89148' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89149' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89152' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89154' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89156' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89158' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89161' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89165' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89166' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89169' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89178' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89179' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89183' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:postal_code:ok]' />
                <hierarchy name='[none:state:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]'>
            <groupfilter from='85001' function='range' level='[none:postal_code:ok]' to='93013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;AZ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]</column>
            <column>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Inclusions (Postal Code,State)]</column>
            <column>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Longitude (generated)]' field-type='quantitative' max='-12376145.412058888' min='-12528431.607664792' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Latitude (generated)]' field-type='quantitative' max='4008168.385919502' min='3918193.7913153698' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[sum:review_count:qk]' min='0' num-steps='15' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:nk]' />
              <lod column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]' />
              <lod column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[sum:review_count:qk]' />
              <geometry column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Latitude (generated)]</rows>
        <cols>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5299DC02-2D68-4ABF-9E7A-A746714868A8}' />
    </worksheet>
    <worksheet name='Buisness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ethnic Type and Businesses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='business_info_cleaned_04.19.20' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' />
          </datasources>
          <datasource-dependencies datasource='federated.1ss9rk404sbe1r1b8tz7w02hijip'>
            <column caption='Ethnic Type' datatype='string' name='[EthnicType]' role='dimension' type='nominal' />
            <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
            <column-instance column='[business_id]' derivation='CountD' name='[ctd:business_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EthnicType]' derivation='None' name='[none:EthnicType:nk]' pivot='key' type='nominal' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
            <column-instance column='[review_count]' derivation='Sum' name='[sum:review_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[sum:review_count:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[sum:review_count:qk]' min='0' type='interpolated' />
            <encoding attr='color' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:business_id:qk]' min='0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:business_id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]</rows>
        <cols>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[sum:review_count:qk]</cols>
      </table>
      <simple-id uuid='{1E939F99-3E35-46CA-8534-3AB3BEFCF8F6}' />
    </worksheet>
    <worksheet name='Distinct Reviews '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distinct Review Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='business_info_cleaned_04.19.20' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' />
          </datasources>
          <datasource-dependencies datasource='federated.1ss9rk404sbe1r1b8tz7w02hijip'>
            <column-instance column='[review_count]' derivation='CountD' name='[ctd:review_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stars]' derivation='None' name='[none:stars:nk]' pivot='key' type='nominal' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Stars' datatype='string' name='[stars]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:review_count:qk]' scope='rows' value='Distinct Review Count' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:review_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:review_count:qk]</rows>
        <cols>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:nk]</cols>
      </table>
      <simple-id uuid='{A122E140-C05A-4790-B662-2EDA532CB6D9}' />
    </worksheet>
    <worksheet name='Ethnic '>
      <table>
        <view>
          <datasources>
            <datasource caption='business_info_cleaned_04.19.20' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' />
          </datasources>
          <datasource-dependencies datasource='federated.1ss9rk404sbe1r1b8tz7w02hijip'>
            <column caption='Ethnic Type' datatype='string' name='[EthnicType]' role='dimension' type='nominal' />
            <column-instance column='[EthnicType]' derivation='None' name='[none:EthnicType:nk]' pivot='key' type='nominal' />
            <column-instance column='[stars]' derivation='None' name='[none:stars:nk]' pivot='key' type='nominal' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Stars' datatype='string' name='[stars]' role='dimension' type='nominal' />
            <column-instance column='[review_count]' derivation='Sum' name='[sum:review_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[sum:review_count:qk]' />
              <color column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:nk]' />
              <text column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{943B006E-EA59-4BF8-88B0-5AEA8D162AE7}' />
    </worksheet>
    <worksheet name='MAP'>
      <table>
        <view>
          <datasources>
            <datasource caption='business_info_cleaned_04.19.20' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ss9rk404sbe1r1b8tz7w02hijip'>
            <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
            <column aggregation='None' caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[business_id]' derivation='CountD' name='[ctd:business_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:city:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:city:nk]' member='&quot;Phoenix&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Longitude (generated)]' field-type='quantitative' max='-10248014.417107724' min='-15314851.760768078' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Latitude (generated)]' field-type='quantitative' max='6076141.6071924027' min='3082524.003790725' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]' />
              <text column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:business_id:qk]' />
              <geometry column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Latitude (generated)]</rows>
        <cols>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2BEDDCAA-89EB-4B44-B76F-A8D0D75AC30B}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='business_info_cleaned_04.19.20' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ss9rk404sbe1r1b8tz7w02hijip'>
            <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
            <column aggregation='None' caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[business_id]' derivation='CountD' name='[ctd:business_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Longitude (generated)]' field-type='quantitative' max='-11201515.50865018' min='-14146514.476600502' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Latitude (generated)]' field-type='quantitative' max='4852937.0637774933' min='3426937.5792126278' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:city:nk]' />
              <text column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]' />
              <text column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:business_id:qk]' />
              <lod column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]' />
              <lod column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:city:nk]' />
              <geometry column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e15759' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Latitude (generated)]</rows>
        <cols>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{92B2F55E-2DF9-4FCA-831D-386CC0D60004}' />
    </worksheet>
    <worksheet name='NV'>
      <table>
        <view>
          <datasources>
            <datasource caption='business_info_cleaned_04.19.20' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ss9rk404sbe1r1b8tz7w02hijip'>
            <column-instance column='[postal_code]' derivation='None' name='[none:postal_code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stars]' derivation='None' name='[none:stars:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='Postal Code' datatype='integer' default-format='*00000' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Stars' datatype='string' name='[stars]' role='dimension' type='nominal' />
            <column aggregation='None' caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[review_count]' derivation='Sum' name='[sum:review_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Inclusions (Postal Code,State)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85001' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85003' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85004' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85006' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85007' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85008' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85009' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85012' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85013' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85014' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85015' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85016' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85017' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85018' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85019' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85020' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85021' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85022' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85023' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85024' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85027' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85028' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85029' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85031' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85032' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85033' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85034' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85035' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85037' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85040' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85041' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85042' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85043' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85044' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85048' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85050' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85051' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85053' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85054' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85073' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85083' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85085' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85086' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85225' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85303' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85310' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85339' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='85388' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89014' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89018' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89019' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89030' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89031' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89032' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89044' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89052' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89081' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89084' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89101' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89102' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89103' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89104' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89106' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89107' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89108' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89109' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89110' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89111' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89113' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89115' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89117' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89118' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89119' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89120' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89121' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89122' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89123' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89124' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89128' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89129' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89130' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89131' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89134' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89135' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89136' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89138' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89139' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89141' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89142' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89143' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89144' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89145' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89146' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89147' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89148' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89149' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89152' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89154' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89156' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89158' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89161' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89165' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89166' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89169' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89178' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89179' />
                    <groupfilter function='member' level='[none:postal_code:ok]' member='89183' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:postal_code:ok]' />
                <hierarchy name='[none:state:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]'>
            <groupfilter from='85001' function='range' level='[none:postal_code:ok]' to='93013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;NV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]</column>
            <column>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Inclusions (Postal Code,State)]</column>
            <column>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Longitude (generated)]' field-type='quantitative' max='-12531060.818786712' min='-12998825.865410792' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Latitude (generated)]' field-type='quantitative' max='4423626.3681925442' min='4147258.7678822768' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[sum:review_count:qk]' min='0' num-steps='15' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:nk]' />
              <lod column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]' />
              <lod column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[sum:review_count:qk]' />
              <geometry column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Latitude (generated)]</rows>
        <cols>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C81A1CF0-C6E2-45B8-9284-4564F504C2A2}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='business_info_cleaned_04.19.20' name='federated.1ss9rk404sbe1r1b8tz7w02hijip' />
          </datasources>
          <datasource-dependencies datasource='federated.1ss9rk404sbe1r1b8tz7w02hijip'>
            <column caption='Ethnic Type' datatype='string' name='[EthnicType]' role='dimension' type='nominal' />
            <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
            <column-instance column='[business_id]' derivation='CountD' name='[ctd:business_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[postal_code]' derivation='CountD' name='[ctd:postal_code:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EthnicType]' derivation='None' name='[none:EthnicType:nk]' pivot='key' type='nominal' />
            <column-instance column='[postal_code]' derivation='None' name='[none:postal_code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='Postal Code' datatype='integer' default-format='*00000' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column aggregation='None' caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]'>
            <groupfilter from='85001' function='range' level='[none:postal_code:ok]' to='93013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:postal_code:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:business_id:qk]' min='0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:business_id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]</rows>
        <cols>([federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk] * [federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:postal_code:qk])</cols>
      </table>
      <simple-id uuid='{B5E225EC-CB5F-4920-9988-BA5368EB9194}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8E620EB4-2FD5-4A12-A22D-DBAD8807C9AA}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='Distinct Reviews '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA0509E2-9EC3-4573-9549-59AC32D0E4C3}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:ID:ok]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:business_id:nk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:city:nk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8EC500E-373F-4017-A866-E64803035D11}' />
    </window>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:ok]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{037198F4-A793-4ECB-B812-4A133D822483}' />
    </window>
    <window class='worksheet' name='NV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[avg:review_count:qk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:city:nk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8AC72908-4508-49C5-A580-05F58BF71729}' />
    </window>
    <window class='worksheet' name='AZ_'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[avg:review_count:qk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:city:nk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{6AC2CC9E-C936-4E9C-B602-DFC6D25A3559}' />
    </window>
    <window class='worksheet' name='Ethnic '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:stars:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78842D60-3028-4DE2-8811-4174CA104CBB}' />
    </window>
    <window class='worksheet' name='Buisness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:business_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DF93CEA-B7AD-467F-8BEE-E3B9F555485C}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ss9rk404sbe1r1b8tz7w02hijip].[ctd:business_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:EthnicType:nk]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:postal_code:ok]</field>
            <field>[federated.1ss9rk404sbe1r1b8tz7w02hijip].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86EDDEC5-D145-4A27-B8AB-447CFF3D6417}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2D0506FC-2899-4DE1-8146-BB4345EBB426}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AZ_' width='192'>
      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
      DVLU1/8HC66whlUQzWQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Buisness' width='192'>
      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
      Gl0AOkea/x/FzdHLfnPujAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distinct Reviews ' width='192'>
      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
      AITINpqmaf8PjwakPV+LI3kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ethnic ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAVJUlEQVR4nO3d6W8cd57f8Xdd3dX3zW4eInVQlORj7bE93jk8szM7G0ywu0iQR3m6/0+e
      5mEeBQvswwABggS7CdY7k5n1bcmyJcu6JYpXs++7rt8+aIkamRIlyiSbrfq+AEPtYnXXtwr1
      6fpV/6p+pSmlFEKElD7pAoSYJAmACDUJgAg18/sTqjfXqd3ZmkQt4hmSxTTd7faky3gpk6h9
      P8vcFYDtWxt89+HlAy9KvLzyuQU2r61OuoyXMona97NMaQKJUJMAiFDbOwAapMu5fX2gGbUw
      beuH1CT2EIlH0Q0dOxXb9Tc7HceKRYhlEhOo7MU8re7Dlq7s3oftVAxN0/YOQLKYoXimgmbo
      2Ok4+aUZsgsFSsuzWPEo0YTNzNk5DMsglk2QWyyh6RoaGnY6zszZOSzbonRmlnQlhxExyc4X
      KJ6ugHZo6/tKS1dy2Jk4p392gcLJGSKJKOWVeex0nEg8imGNT+t0Q6e0PEuqnMWKRcguFCic
      nJlw9VA4VcaImJRX5rFiERKFFMXTFWKZBGbUYmZlnnguSTQZI3eiSHahABrkF0uky1k0Q6d0
      ZpZUKYNuGpSWZ4nuESo7Hae0PIdlRzAjJjMrc8SyCdDGO+CeAYhnE6x/c4/sXJ5UKUO/0SVV
      ytK4XyV/okjxTIX63S1Ky3NUzp/A7Y+IxKLYmTiFpRm2b20QBIpRb0jxVJlo0sayI7iDEfFs
      8mC3bIj4jkdrvU7tzhbKH2/f8srczt8ffeM92u7xbBJN01BKEUlEJ1X2Y0rhDEbMnJ0jM5un
      fq9KbrEIwKg7YGZlnmQxhTtwsFNxUjNZfM8nnk/t7PjD7oCZs3M0H9T2DHaymObBV7dIz+ZI
      z+ZxBw7uwCFVyqAZ+rMDoOka8VyS9GyOZDGNCgLcoYMzGOE5PiiIpeMUTlUYdvr0G92dn540
      wHc9Aj8YL0jXGPWGaJrGqDvAd300TQ4BB6FwqsyoN8QbeU9Mz84XIFCMusPx9u8OCbzgWGz3
      7EKRQatP4Af4nk/g+QReQGFpBnfo4A5GqIdfnCoIMKMWmdk8mq7Rq3fo1dqUV+aJxCIUlmbw
      hu4zl5UopMjMFkgW0zTuV/Fdn9KZWQCiSXv3z6CPmFGLze8eMGj2yMzl8V0f5QcMml1A0W/2
      6Ld6JPIpfNd/OB3ckYPn6Gi6TuX8Ap1qi3Q5hwoU7tDFN3xUECBXIL2cYbuP7/p0q20Kp8r0
      G13SlRzOYITTH+E7HoNml1F/RP5EEaXGO5LveCil8F1/InUbEZOZ5Tlaa3U81yMzm2PUHZLI
      JalcOEF3u40KAtLlHL7jPQysT7/Zo7fdJpqwAbCiFsmHrZFevUN+cQZ/9PQA6KZB7c4W3WqL
      zGyeeDZJPJugV+8Q+AFOb4j2/Yvhrv7Tl9IPcMy8yv0AhZMzB97xKv0AYmpM+qoDCYAItWee
      AwjxKjjx9mmcgUNrvc6w3d/1dwmAeKU5gxGb1x6gaRrF0xWaq9vkFktEYlF8z5cmkHi1xXNJ
      yucWiKZi6IYOmoZu6LgjF01/Tk+wENOu3+iyeW2VYadPJGGTXyyhGzpOfwRKmkDiFVe9sT5+
      oWDj6n3QIHB9dEOnV+tIAMSrLfCDndfen3SYjad70gQS4SYBEKEmARChJgEQoSYBEKEmARCh
      JgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYB
      EKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARCh
      JgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYBEKEmARChJgEQoSYB
      EKEmARChJgEQoWZOugDxfIZlUD63MOkyXli6kqO90QDAMI+29nQlR2+7/cLLlABMAd/12by2
      Ouky9mWS9e5n2dIEEqEmARChJgGYMslimvL5BbLzhX29L7uwv/kPihWLMLMyRzyXfKLmWCYx
      kXq+T84Bpkwsl2DruweoQJEsprFTMVobDfKLJfrNHu7AIVXKoJSidnuTwqkyvusTzyaw7Aij
      7oD2RvPI6i2fW2Dt67vohk7hZJlIIkp3u42m6djpGKlSFqUU27c3KJ6qEPgBzdVtSsuzjHoj
      OpsNimdm6dXadKvtA69PjgBTxrRMyucWSM/myC2WGLT75BaK1O9XSeRTxHNJevUOmq6RXSgw
      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
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
      O4Hy/wNq+KEWHCJ6wgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      nMTADq7B/wfyXgA6eGmWvgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='NV' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO292XPkSJon9nMH4iaDwfvO5JU8kpl1dVd3TXWpd2xWs5rRjh523/So19Xf
      tLa6zPSwktnKdswkk2Z2Rquerj6qOisrM0nmxcwkmbzJiGAE4wLgrgfAEQ4EgADiILO6+lfG
      IjMCcHc4vs/9u/z7yOHhIcefAABgjIHjdqeDgIBQAs45OL+5sVBCAQCMM99xUUp97zeY4fud
      QpWuxhb9vRAQYj4TIQSEEADwnFMVgH3Bjx23TfxiDAQ38z5kYuAk+NnF3PjTCgE85k/00Q2N
      EUrADBahDQ7OrSGJNnzu9WfpHyVubiEQq5H7R3x3k+OQf/sRSrshEdI67l49ByUUlFAnw7rm
      zN2vWP3la72g9mSEP1L86g/PcF61CEj+Qqw+3PlRGHAAG5MZbK4u9WSMgX15EAUhxIdYgp+A
      EgoG5miXEOIgxG5AKQVnTWblnAOkda/knEOhSqC4JuNPDCDhN4+3UKxzz32AePxjrwTUB+d6
      Po7x8nEAIfYPnPNAYm0nnol7CaGgluzdK/GaEAKFKtAN3f633DYHBzigKIqtzzjG/qcdoD12
      8zoKmfnwNwz2tn/OOVA+g5Iz+q6XucUJ0R9jPkqwYEifYRFCTOYg3Su9fiCEQFVUGMxwiG5i
      pwm76sv4UTOALCO+OzxBmWZud0CGji8ngZ88fHijq3/PVmlK+q7AC2I3uGETv0KVjp/hR6sE
      E2Ka9RRFwfH5Jf72RRlaavh2B6Uo0Lm5CvutxL1GFDGlHU/2St5vOw40d6xuiB/4ETMApeaW
      WavV8B+fnsFIDt32kEAIxXFJu5HVvzOL0836JjxH4LLodGu6/tEyAGBO5tVVCRUeu+2h2Dir
      Aobh71TqB8ISNefcsTMRQsA4uxVlXfRvGN31/6NlAMYYDMOwPJi37wATqHEVmqb3tY9OCYYQ
      0rLiMsYCvcC9RuvYu9uVfrQM4HCkfDj0D54ZxfO3729sVY1qqvRyKnHOHZYZ8VmvwTkH48xh
      vPBiyij40TLAhwqiqPin8wS+3X7Tl/Y7jTFyiz/iM8AShaydgPHm735AHr+qqFAVtSuz658Y
      4AMESQ7g2Wn1RnSBKMwgr7x+3xmGYVuxDNZ7/YBYTq5eOdn+KBnghx7cx5mB3MV7FM4ve9dm
      QOxMGPgRnLs5cZ25Kxi2aOTXb5R3Zdr8KVRF9fT2doI/OkcYpfTGrRK9RuxiD//NnXs4fXGE
      d+USBnJDiMfjSKVSUNXor6xXBCiul2VuGiCD27sCM1p8BIJJor6rXi9uf3QMcFMOpH6BlM7x
      1ymKgUQKA4kUri4qyB8coGjoeKfo2Pzlz8zrQhBQGFt/JwTlaI4QcOYdqizL6n7f3/Zi9UfH
      AD9kKOVL/DXKWBudsj/LJtPIJtMAgEqjhhd/9xvw0QHo3MDY5AQm52Y82+ovcXHfwDn5c0qp
      ecAngDlE/M5tLVx/YoAPCLOlI6wvLPt+n44n8cnkok1kj94cYGJ2+sZ1HidfOZksamwOs3aP
      24h+Bf7EAGb4bOkYvFoATwyADIzeyji4VsdK3F+x45yj0qib/yDAdb2G1MxowAGWfhJTU7Ri
      jHvK9pFa89lNboIpyNHR0Q9bY+wh/rf//BiH8dlb6Vs9fon/fm4aMcV7TbqqXuMP/BwTk5Pm
      9aqC2bm5rmXrTkKIOedQFAUEBLqhtzBAJ3b5W9sBXr16hZmZGaTT6Rvv/KbRdpJvyXrKDR2f
      KoYv8QMAA8fk5CTuLi70tu82h2C8QAhpnnrrsi35Xr++hKOtH6CLS4s4ODhAuVzuSwcfEm7b
      4uCHZP4AP5uYDrzG+8i5N6I8p5eHN9R9PofkOzFrUtrM3uAlQrVjjm5AOedYWVnByckJCoVC
      V4390HEbGwDXavgZqSMVT/SmvZtici6dApPQyYEY2VzbEu7sI865GadTUMDMBbOwuIDLy0uc
      nZ113NifEB2Dl3v4ZMLblOlElD3gZsA5B0eTaDs5ltiNh7oXKVfs0XLOcXfhLq6urnByctJx
      gz9k3MYOkLk6xV7hoichxVEJqRNrjd9nhFAzS8MNmWTlsUQR4cR9jDHohu6MBeKcY2FxAbVa
      DcfHx70Z6Q8KN88CJ/e+wn9ITOLfvtiCZvT3HIAbfjK397XUYd0RxxJVS3HnnLU/M9kF5J2i
      UzHPq42W/Ypzjtm5WTDGcHR01N2of2i4JSsQTaQxkkgGWoEI0FYCCkMYbqKPIkNTajKB+HHf
      T2j/JpBxc8WWfzoVgeRwbV+BbWJyAqqq4t27d10M+4cFAv+Mbe1+3ODutgKol3OOuXh/fZJu
      K0unokrQ/SJxVa8h5tAxfnTmN3AzTeCsD48MgxCC169fY3nZ30X/xwJWuQJXM6Dp9gfkOWdg
      1RKgN6BWiyCcg6VzINlxkSfQ/C2u92AAerEHaHXE9TqmhrOB/V03asgMTER/KPQudj6ofc79
      cwZ1C8EAUTK+ebVhGIYjowQQIhQiN5wDpRQ7OzvY2Nj4YG3pvcACDPzEuMTLo3coKglc1hso
      x5IgsSS4VsegXsVILI6sXsVoIomhmIqx9ADS2TEQAvzhYBdfx1MgyYG2ffGrM/zrJDA5Ng6F
      KoHiDwAcsWusjY+Feg7Z4ddv4ges3J1K/46WBJ0uk51v7WiTcdbCQKH23exQFpRSbG1tYWNj
      I8wtP0jEFBWrI9NYHZtuWgs4R6VRQzo+CirJzW78bu8Fvr2ugAxWgHYMwDnWqudYmF+w4uuD
      Udc1KGODgYTsdR63V4RvEpn/9930Ezak28/CJDNAUFti5XfPTWi2HRgcwNzcHF68eOH7IJ1M
      xId6eks8j0IpBpNpKG2cLp/MLOLf3P8Ef4MyyMFT8HOn7uRwEDEdnOmoaHXru2AcXl1gwifs
      ud34ezW//XhLYeJ/bOKGP63I+kFURNq3UukU5ufnsbW15fm97J0Lg9sKgOoH4moMMUXF2vg0
      /s2dedytXvhfrMTwcmoT/+4sj63T9hkgCqSBbDZYR/hjBeft6yW4jRFB/go3IgtusXgMyyvL
      +O6771oObYu4kjBcHaTMeHHzh7pTuGFaJ4CTRM7xOeccnBnWDwMIRXVsEX+bmMS/33uDQtU7
      FotzDoSwEN2ErN9LhD4vwK1UKCGYgDEGTddaknXJViQ3bXakuSiKgvWNdTx9+tQ+0NCJg8Jr
      m/ZTaH4oO0Vd1/C3R4eojd11fE4ql/hiII8vBvL4fCCPico7cGaAJAfwbuo+/sdiHd8cvWvx
      CBNCcIcM4mjvoG3fvTBz3gTCKq3yNRwchitnKnMTM6WgVDEtPsywF2iZNt1z07HxWVVVbNzf
      wPfff4+PPvoIiqKEJlL3dTdxIihMnalu+6806vjfj49wPLEK4oqJVxrXuDs5j//vxTEo4Sgp
      gwChds59bXgW/6jVsL23i38xOoKJgSH7RY2mB3G1d4rHJycAoWYWZmpaXqiiWDnxiakoWinK
      Hcxg5UFNJBOYmHCaUnutMAdB7iM88XNQSi3CZ2BcTuVugLhOn5l/mrTEOAPhxGFFMn0y1rUA
      yP7BfldvnRCCne0drK6uIpFIhN4J5EG7z4XKK4T7BXVKpGE8h8/+4Tf4fHSho/Y1Q8f/cniE
      8/EV7/b1BlAvA5kRm+hFUQf3mEjxGJ/rV/hychaq0v5wiQhIY4zD4AyMW3l5OANjJiHojOFF
      5RSf/eUvHfeKOQ8SSbu1wXf67kQxDEooDGZ4LpJyOIZ8TzsIyaVr9yPnHBsbG3j+/DmWlpaQ
      SDTDeuWV3W/V1w0dzGAO5dnvt2in08MRXmPoFV5dnOAsO22bSlugxgF1xNk/iFmcjrvs2UNT
      +J0xitLxW/zXM96nvtztEEJAFUCFN8O8vDrBxleft94bKg6IOJx6UdDNwuV1YN7dXjdMyTnv
      TWIsDo6N+xt4/fq142BNO2I1RIJao1nswB2jIsd89yIISiTFDaOsR8F311VQyf7PmYHUySvo
      J7uB98lZEzhn4EIHoAq2S1fQu4wSfXN5jO+qR8jcv4NUKtXafwh9gRDiz9hSG36Gi07nWRTH
      k9sS7SlU6SpBlmDqnjAAIQSGYWDzwSb29vZQLBYd3/tNALNeLiHmkTdd121m8FOCO51MIQfa
      L8Vqi3URXSiwXzjH+6x0ouvqFB+fP8d/NzUGotVCtxMrnyB1dQDj6gzxN9/gv52egtpluaHz
      ehmrP/8UuZH+Ff8QtRbc6CZyU27DD4QQW9wLKiriZ5qnvRCBgOYWpes6Njc3sbOzA0JIoO1a
      XvXtrc5gUBTFkSoDaBJtp6IP48wRSSl2E6FQia86eVm6YeD/OTkCT40gUzzGiKrgq6FBzI0v
      BRadlsGZAbV4iNmVdVAlhmr+BHPXccwO9SBDxQ0qt/0wYgj9xm0pNJjRYjHzc4gJGvNikp6G
      IAoRY2NjAy9evABjDMPDwz7Rkk0ZTuwADBxUstf2akJFQlUQM0jNPaHdQKEUfzMzj2wyjZii
      2tURAXgeHHeDGxrixfeYvfcAVDULdaRHpnB4dWmFYCR7Ms5+Qby7vhC/RU9e78r9WZCBg3Nu
      71JuM2rPI5gE4a6urqJQKCCfz/s+gKzkcM4BEbEn5PUepdgmsLZp0WcPTa6EEEwM5pCMxe1w
      idbevcF1DcnSEWZXH9rELxCbW8F3lz04ntrnHSCs87MTuGsOdArfwMB+MIDBDNMbxxiWlpZQ
      KpVwfn7eMgBR+VuePFMcMZ0YOtN7OrFNS8btO4o4OLjeQLp2hpl7D0A9IkEVNY7d9BCu69Wu
      +vqA/WGh0Iv3lEwmMTw8jIHMQIuu0pcYViHjMsZw9+5d1Go1nJyctIg1lFKHciorU+LAQy8Y
      gBAzWZNKFdOu7tNmP2jFdOU4D4/zWgWDehFTSxstDjMZqflV/Pb8uMXjGQk/dA6IAtLKMIlE
      AsO5YcRjcU8dsmsGEKu4sKYoVLG9wuK7+fl5aJqGw8ND13iJnTa73yuy3EdMjd3YDkAs7ywB
      ATgDuXyH8ZiGiburTd0k4N6LpY/x7flx5wvBHwEDcB7yuKdHIl6x6gvJxNEuANptYWOhYBCY
      abDFCs45t72vjDHMzc0BAA4OmjEtlFLEYrEWpbefxOneaRxBU33rFWDVEuKFPdxZ2cDQzGLo
      +5RUBm/nVvHo8rQjJviQY4LaQZw9VhXzdzta9bL+iM/KpTLq9bq9C9hhFp1OkJeGbjDDPrAs
      RBtZkZ2ZmQEhBHt7e00TJ5qmTneGMOuCvkC49h3mtX50xAFePMZEgmFu/VOoHVh1lNQAXs3e
      w5PCeUcBhz9UyLQgiporVLEdZE1HmTiS6TzwEo/HkUgkoGka6o26Q6c0mGkap34BYmKevSZc
      hJt62erFPbap0XX77OwsYrEY3r59a19rptOmjvvtSegTB5jezf5XiIo1ipifm0N2eqErYlST
      GTyfWsKzYrSySf3M1NDN83Qa0iIvlMzy5cA67UXgDJEYzg3bTlpN02y6NBizD9iofisKIaZI
      w7gZOiCLKYSQwIl1MIMHg01PT6NUKuHFixdYWVmRBmY077mB6GdKKQjrXxTq0/NDzH78FWKp
      9meEw0BJDWBrbA7fbP0a2dwImGHgs3gaS1JBDTf6tQN02q6pKzInLXU8RmmhJE5JIp1KOyKU
      m2HVACQ/UNslkLoSIvVKYR0aGsLU1BSePXvmGDglFApRuoo+DAtCiG/5nm5xVavgWTLbM+IX
      UAdyiK9/ATI5j7GP/wxVQwu8nvR5DqPAXEx1R9RvO1t/VHqjlCKZSCKbzdpOusu8/64Zanbk
      hEhRg9L8RBjOOTKZDO7evYsnT56Y/Vi5JcVPlEojncJLhOsWnHM8OdkH7xPxJbMjqPI4Lo73
      214bFMTWDaKYqEXYiTvERdzfi3gsGel02u6jVqsFilqhQyFsZQRNB5Y7wMz7Rv/2ACCTyeDe
      vXt48uQJHj58aMbntGuzhxDP1ev88382fw9L5QL+7uw9MuP+RTfkwxlhwTlHIjuCWsHA72vX
      2CmcoFq8xNXRAVQ1Zs6f9ZMbH8IS5/bWT6kS2TLqFXZwcX6O0bGx0O/JsOL03TE9JiMZYDBD
      VhTqjP7shDFEJU3OOWr14GDEjmKBCCHmKSROrWLI3vEaYZFMJrG6uopnz55hbX3NHFibPDm9
      Ri8ZTjDV1OAwZo73UQxggCi9Ml1D9ew9yOE+GsULDH71V9BHZjG8sAT1/AjVfB7pZMZxj8E5
      YrGYGQLOGQhBS8nSMOCco9FoQFEUbP3+EUavCZ4md7H4ySYGBoLFvCDztvMz03QOS6GNmm1a
      7ErVatUeU71eb/leRldUZnpYKTiaAVFuaxD18XS6B5NIJLC2toYXz19g5d4KOO1dwNptgRCC
      GVXFyekBkhNzHbdTL+VR33+NgbNz3KFJZGIpHJAEGoyBpgbx5snvMDrlzWSNhgZdN+Xu3//j
      b6AyitXPNzEshUdzzu1rDMOAqqq2GFqpVPD2/TEuqxyFqysMXZ7jv5hdxcBECgZj+O3vHuOj
      P/+ztifKwr5LW8TuUNfknKOhNTyJ3X3iEAhgANtMZXGj32BsT6dlFZLt/pRQ3xXOa2tTVRVr
      62vmTrC2Ztt9+80IqqL2JD25F9bHpqGdvcdOdgRqMloZKs45qnsvMfr2HUbjA6AJKabfmpK5
      d1uYzw7jVzuPkYy3HngpXxTx6//17wEAKZJEUlHw7O//gD/7138ORTpuyTnHi1e7ONIzppWG
      mYdzqBoHZyriR3v4ciCHucWHtvlYoRTLiRHsbG3j/oNNz/GLoMYo71C8804ZgBIz6pNSClVV
      0Wg0ADR3Zpk5fNlWaOiG5NQKgmhczh4cJUeQGDznHJv3N7H1bAuNRgN6jyICg2BaoPrDaIQQ
      bI7NYObtE9QvDtvfIKF08Bp39o8wnsg6T0YRgDOGq3dbGEsPYH1yHr8Yn4WuN+x7RfwRBcVI
      bAgjsSGk1AQIIRjQk9h9/srR1z/+/T9g77KK7NQdDE0vIDt1BxQEg8cH+LJSwd/Mr+LO8ESL
      72QsM+RJRCKbszjLGwZy2HI376JWr9myv5t25EgAQtociLkJC4wjFEFwJgEePHyA7a1t3Lt3
      DySOSDtB0HV+zERJa7mfXkGhFL+YnMdB8QK/0jUkJqWUKdZ2L6NRLqBysAtycYaU4pGolwOG
      VsfDagnT42bGuI3JO3iXP8frq4LpVCTmhTWthtPrS4eyQThQOtIxNDZsiq6MYz42iHypgkal
      jNL7N5goFvDno1MYnglOinxUPMfQvXHn8KywdiA8DZliEu3NO+CwdwFd9z4kL8YVSgcQ3jOl
      h2Y9wYlCd3BvlYQQ+3TZ4uIiEskEFBL+eKDXxPd7JwkCIQTzuTGsHO/hpHAKAMjUqyhpdTQ+
      /QsQQqGVC6i/3sJ4voSl5BAIHXI8hzs8JBGLYyrbPGj/z+99hOPv/gk1ooBzw2xTIXjFys3b
      CIGha3hQTKH+vNg8UK8R/MXMEl683sad3DhSg2O4btTMQyMBRHyqXePeZKv4E8Zc7v7ecZio
      C6TTaSQSCZSvgws/tt0BZDDGApPDRoE77scOE3Yr0eBY31jHq5evMDM7i8E21oagsfXyhFk3
      +Hzqjv13Q9fw7/degVzlYRztYezkDGPJIZCU//ldsUNSNYb9ahn3G3WkrQJ7MUXFX917iP/4
      6hliCdMaVFVriLt0A0pVpOIpZFODdpvVsikWrE/MAwBeXR4hn1OgXpxiIT2Cd1fn4CrFII1j
      ZaR5/nk4lkI+n8fYWDNztRCF26UokZkkrGXKYIZtO/ZTrkXSgzDtRbACmSYqUSC5GwgZTHZT
      +w2Yc46Veyt4s/sGmJx0ePi84BWf1K8as52Cc463F8fYOTjCKFNA/vAtcslBqCnv46NA87AQ
      0Dwr8eK6jMr3/4SxgSG7XQCoXxdAlRhU1ymzauUKhBLE42kArmqMVtsNXcPj/AHGNpfwcGYa
      5XIZ798fYvEnP0U8HsfZySl++/0LpDTgo9llLOQm8ejVnoMB2j27ly9AVG3xYwT5PEU75yXj
      DKqqIpVM4erqKnA8kRxhtgMMToKKaqmx27F+DGbYyaL8rl9aXsLu6137nHHQFusei3xtVE92
      tzAPbzPE1Rg45zgrF7Dz/hBcUzCedBJN2zHKKx84xtUENJrGke68tkFV6NdF5LKj0PQ6Glen
      IIQgplDUajUYeg1nBY40BWpaA3W9gcURU47/9fvnePhf/sI2a2YyGSyv3rOJb2xiHCN/MYoX
      O8/x5vQYCyOTiFkGD/dCQ0nzwBMIsY+kyvqBm6jdCQxkhLEMEUKQTJgRt5Vqpe27juQH8Fuh
      dUOPZLqyiV6U1CHtxSpxxPLVq1fQdR3j4+N2/0Hjk7/rxrvYKfYuT/Hq9BCLY9N4e34K3lCQ
      S2RBYsT3zHw7xm4yio/YwIHBwRyuynnEYwkMDbaKVDHK8ZO5RRwVL9AwdNwdmcTl9RVYJg7O
      Od7svkEinsDi8mLLvZRSrN/fwNHQIb7beQcjE3OIs2KslFIzHJwDlBL7GKwwO5vE33lyKy/E
      43EkkyYDhCnZ1LW7tbmFsVBp/ASELBsFjDMsryzj7Zu3AOC57YbZGW5yF5gfnsDO4XscnpaQ
      U0cA6ThAu8eXxQM5IHG/eIT3pQvMpsaRIKaYc92o4ax6DUoVGMxckBLxJPJXlzYDMMZg1MpI
      qCrmJ01Z3+AMijUvOyd7SM6P4ev/9DXYCaBzHbF4DIqiYH93H4WTAlY/uYcFiymmZ2cwPjlh
      j7WVQUmL4UJcI0TgXr4HSimyg1mbocL4dnoSb2C+qPDXc85DpQzxu3dpeQlv3ryBYRiOZK9e
      jg75c/G3bH3qN1RFwcL4OC4vg6M2ZbhX9Z3zPRAoyCYTqGoarutV3J+dw3/14DP7mtdnh/i7
      /V0kEylb+Uwm0kglqtD0BmJqHIwZ+Hz6Dj6eW7ENGkxauCYGh/H3j77HkJ7DSHocDaOBb/7h
      G2S0QWisARAdL55sIzc6jFwuB0LMQycyUXvNq9c8C+sT4+2TFodFIpGwx2MYhu0AC0IPwxXD
      p8fgvHlIvBMwxrC0uIRavdZS1FvWL+TPvLbomwq1WBqfQaFeDPWa3WPKV4tgjCCtTqChDSBG
      xpBNzCIZpzgsnNu1hV9cHCNhWYPk1WhocASlchGlyhVK1SK+ubrAo/ev7e8Z51As59ZpqYA5
      ZQG5pGlajStxjGESBmr4YnUO/+qnn+Ff3v0I+W9f4v3evmOhsU3ZHgYHsYt5/fQq9Q0AJOIJ
      x/yFEa16FnEmuJnwaKZSd4hsGAgGunPnDo4Oj3B8fIypqeahkCAfwG2YQhNqDFMjWTSuNcSU
      WOC1bkX47LqITMzUdygRtXkBJOLg6SSenu1hITuOw3IRasrMxMcBGEyHCEYfyGShpJIYHp0E
      IQTf7L3EVuEMhBBUqtcwGhpiagyVRh26YRKkYehYHbwHgGAkq2Bu2ByDAmBzfB6/+X4bs3fm
      HRY8P+IPQi8XIfmQFqUUqWSq7S6g9lIeFuEThJBQ0ZxukSXKZIhTahOTE7g4v8DBwQHm5+ft
      dt1wE5Ztf5asF3VDw8X1lWmtIATpeHDx6ih4MHcX/7T9HCrNBlqp3OM1v3evZARgFBO5UQwP
      ZPH2+AAK0zGumMGJFQLUahXzOmvfqdUryA6NQI3FgEQKmUkz67RRvEQlf4lYcgBDUiCprmt4
      c/4GqhLDQNZZU0BnBrhVtYZbO7879aStD1h5nrr2HYEEikqEEMQksy8hZsRyTI05skG4I1PV
      Xh89FPpAoBPEx8IXdYrETjA2Nobz83Ps7u5ieXm5RRlz247d4RcCq198hmq9Bk3ToNUbqGy/
      wydtQgHCIqHGsTY3hef7Z8jGnQ49t74i/zubSKFYP0Ndb2AgNg1KTGvbRbGE//zkdxhLDoAS
      gi/vrmN8MIfh9CD+T8PAieFcUAxDR+kqD0VVMTQ8Js2HQ2KyoSgqsuMm4ctfl+tVfHv9Hguf
      rpsijMeqLy+AvfLBqDHVtCCpKpKJpO3s0nUz3sgW/ySkUikwxlAoFuxxuRdatVcKiIy2zE7g
      sPkT6y1E2QVkIjG4gbHxMVCF4uXLl1hbW2u5XkQH2v1J7QiLRHYoiyyaCX2fbe+FGktYzOTG
      sPX+ve/3Xkw6NTiOqSxwWS1i7/IEDVbHtVLDYCyHwzqQTpWQHcyBUgWKXoN+soeT8iU+n7gD
      DvNcMksPgFMCMAOFszNks8MoSYtELJOCBoZy4Rw/m7xrr0SvL06gJzIYTjW3hu2rIzz8xU8R
      i8d83xfn3LHqhn2nsVgMzGAO6w2lFFfFK1xXrpFKpuzz5Llczq5FIRf5cEsTggmuSleeVqqb
      PXXSB8gPNTo6Ckootre3sbGx4Tij4PY+intkj/RNjDURU5sOLcv55yUGuolmNJXD6KxZeO/3
      F88xOJCDbuhID6QxPuE8C1CpV/HTO6soVMv4/rqA0YkZ6LqGcukS6UwaVKHQdTNnk1liSQWh
      FDPZEXy5dN9uZyQ9iN/sv8LSmFkbOl8pIbkwiWQy2VIg0f2c7ZCIJxx1vBKJBDLpDE5OTpDJ
      ZKDpGt69fYdqtYqxsTFks1nEY3E8f/4c2WwWjx8/xl/+5V8CAIrFIoaGzLipQqGAR48eIRaL
      2fUQHj58iCEyZHqFLZ+TWTKrx9mhu4EYVJjJc8tx4jPDMJAbNolka2sL6+vrDnnfzQQyI9yU
      b0Az9K5tbxlVciZ4mRit58omM4hbBHZdymPzo48BznF8uI9C8RqNWg2j49MwdB263kChVsX/
      /N2vQJmBe6NT+NndNaxb/gIAeJU/xvrnX1qdmI4mr/flN5dyMjKqUAwPD6NSrQAwGeL777+H
      YRgoFouglGJ5ZRnJZNJxkOXjTz5GrVrD+fk58vk8nj59iuHhYbx8+RLT09N48+YNvvrqK6iq
      ikqlgnK5jKdPn+KTTz5BQ2ugWq06xvLBMADgLaNFBWMMQ7khKKqCnZ0drK2tOcGcNFQAACAA
      SURBVHQBoTy7dwWvF2b0OIaIc46GxgBbXO3sOUt6FUMwK8cfHL7DZeECkJL+lsoF/A/1Ghg4
      qrqGytE7KBTQGg18982v0ajrGMyNglsmSEVVoagqGo06EokBGJyjqjmPEu4XzpC+N2MfoonF
      4gC4w8pix9irKjiT0txYc5tMJjGQGUC9UYeqqFAUBYMDg+Cc4ze/+Q2mp6eRTCVh6AYIdYZN
      iHa0hoZUKoV4PI7Dw0P8/Oc/RzKZxPPnz1EqlfDLX/7Sfq/xeByZTAaKomB7exsr91Yc2eGA
      D4wBZDjMlqRZosdUfINJh3Mz48T09DRevHiBe/fuOdr0ut7ru7PrAnbPj7A4OtUTc11d1wAu
      7UIh73MHwUEy9yXiKWSSzkIkFXqNoZm70pg5ivkT5C/OoOscc3dXoRs6Sq4kW2bwnMlEV426
      47vjhIYHK6ZBwMy7Y5oYG5AO4ViL1+DAoHm0MqaCMYZGwzyimE6l7VSY19fX2N/fR6lUQqVS
      wdzcHDIDGZOhiPNMgWMOG3VkMhl88cUXjs/Fbi/EXl3XcZm/BGMMq6ur2N3dxbu37zA/P49K
      tYJazTww01MzaC8gshcImBmkzQqI4n2acnP7tlLpFGbnZm2dwO4jhKcSAKayIxjNDOLJ4Rts
      TN3p2iRqelzDz7UjXETienm49XoVZdtMal7Q0GooFs6RSKRACEW5XED+/AjXpTwajbppNUmk
      kNcauC4XoTUaADga9RpSaVO8Oqk38OzoHTanTUbilsVF5HPVNM0+cC6LkIZhIF/IY2x0DKra
      zLkkEhJ//fXXAMwgu5GREUxNmYtLqVQK5bltNEwxJp1Oezq6NE0DVaidoh8AytdljI2P4ejw
      CK9evbKNJLVa7cPcAVrs5Nb/hNIaBYlEAotLi3j69Ck2Nzcd4k/bWBQODKUGsDmdxrOjN5gf
      nsBwejD6A1lQqYJsJgFuBEe+OnQV2Fxv/nLNTSKeQjo1iGrtGn+9uIbJ7DAeH7zG5swCzstX
      UBUFMzNL+A/GNyAT09DlLH+6geuLS8RjCYAAWr0GWMeW1VgCXx++xWWlhImBIVTUqk3g8ikr
      hSotMTeGYaBULmEoOwRFUezozF//+tdYW1vD6Giz9JOu6yheFUN7hDnnKJfL0HUd6XTaZjIx
      L7quI6EkHElwG40G0qk07t+/j8ePH+Pi4gJDQ0Oo1+v9qQ/QKfzEDLfMHnXDisfjWF5ZxuPH
      jz1LbraDQikeziyhUC3j7cVxtM4lnJYKaNSacTDuGKUWED/xzI6LtmObCCGIqzGk40kkY3EM
      JtJYGpvGneEJqFRBOp6EHT1KTKcSJRTJRAqEEJTLRVRyczgsFdBgZUzPDaMBHd9dvMfZqIKN
      n3xin+PQdR26rrcYEmRUKhUUigU0Gg3bwFGv1zEyMgLOzXw9F5cXODs/s8WRsNANHeXrMvKF
      PKrVquOdKooCTdNQrVYdYxLnhD/99FNsbW3ZGeQ+qB0gvNs8vNtM7BqJRALr6+t4/PgxPvvs
      M1/XvbNDZ9+Lo9PIV0p4eriLtcloItHW4TucXl4jG8+GFjn9vJ+1WgWl6yJUNe74/PL6Ciql
      KNUrrW2ZdA+FKjbxC5Rq1yhMrUEdvwuAIGGc4Bdf3sfk1DhmZmZsc6KYf1HGSnzmd/qrVqvZ
      +XkopVhcNHfi9fV15PP5rp1kmqbhqnRlEnMyCV3XcVW68tQfFKogHovbC4ammxmjP6gdAGgl
      a7ECus2ZUfUWQghi8Tg+/vhjPHr0yM4WHBXD6UGsT97Fzske8pVSqHuK1WvsnxYwGAsnPrk9
      w+7PEom0GfWp1aEZGi6LZi2xq9o1DosXeJ8/Q6lWwVXtGoVqGaelPK7rVVSuS6hWyqhel1Gt
      lME4w3WlhKupdcQmFu0d4kBL4+TsHPfu3UMm40y0JaMdAVNK7fAEQggWFhZwfn4OTe9s7r2g
      KApUVYWmaShfl+3cRu72NV0DB8fV1RUMw0C5VMbQ0FDvQyG6gR9hiwS2tmUIzVR7YSC8wIpi
      Jt99+PAhnj17hs3NTYdO0dq/9y6jKgoezixh9/wIxdo1FkZaszNXGnWkYnFcVkr49vVrjCSd
      VeLdvgdZL/GD7TgDEFPjiA2YO8BZ3hTLFkanMJsbR0Vr4H968ls72TBAkGAa/sXsit3WVb2K
      38UJ5pcXoSfieH91iDMjCcWoQyHAo51T/NW487yFHDdFCEEsFrOfxQviexnxeByG3rscTCIk
      onhVDHTOUWIezslms9jc3MSbN28wMDAAVYqX+iBAiCtvv0sMER+xCGZJsXuYFSLNF/PgwQNs
      b29jdXXVziUp+gi7Oi2NTePi+gpPD9/g/tRdUEpR0xp4+v4tLos1JOIUtYaB0cSob8hAKIh3
      ZEl+3CoO7fZlCOjMwEDaGXSXMBqYzTUJehZAZUjF/Z9/Zo/l/DIPlVJkMmn82//j71GpVOxE
      s+5+5DnzQ6PRwFXpCtnBrM3wxWIRtVoNmXSmbdaGMDAMA9VqFZqm+c4HANMyZF0zNjaG0dFR
      XF5eQqWEguFmDoeERRhLj5A7o8QOmc9I7PQb9+/fx/b2NpaWlpBIOGPJw87HaCaLwWQaz47e
      IpvMYGv/PcaSoxhNmnLzQA/K/BIQcCIF7WVmUL6uIm9cg6YzEKuEuEIUjTCJznsuOeeIxc0V
      2jAMKIqC8dER+7uPl2ZRqdaQyWRswnJX9PSDuIYxhkrFPJebG8qBc46vvvoKX3/9NT766KPA
      Z/aaf78+wzCSrusolUumLpCIo9FoIJfL9ScY7iYQxO1eaMbaOD/f2NjA06dPsbKy4pB3oywI
      cUXFg5lFPD18iziNR65lFTUcfDSVw2gqhzlm4NnlLuq1Mhgz8J9ePUU8FsdpuQhOzaOMGSv1
      CWMMmlWzjcNKV045zi/yePLuFJ8sTthFzRlj+NnH9+2xyZYqOaAwyLFoVqBrMoEImT4/P0c6
      nQ4MbfaaDzfjeelGbc3aMI9JinCISqViOsLcDd0mxAtotwt04pnlXJIjJDx48ABPnz7F8vJy
      oNLXbjwPZxdxPlTEt7u7UHjMSuvIAAIklASGEj5KsCXiRH0HpcY1Bj7+FKXtRxgdHAUHUAcQ
      TxooXV8hSZMoXF2YNn6tjn/36FdNsuNAbCCOqfQklJE5lMt55HK5FmODV7yU37th1mEaQdyc
      Na+tVquglOL9+/dY31hvq0AHLXBh9KUwqNfr/iWSbhLuMXgVUpDJttOHt9t1lXcihOCjjz7C
      kydPsLCwgMFBk1A7CX4YGxjCP9/8CKelvHkqKRZHTdPw/VsztNrt6bafp4OduIgGxpc3UDw7
      xFXpCrBKD9Wq18gNDiMhFeS7LJ4jkTJDFGpaFSQex9jDL5EangQzdFyWNMwLW6lcSZGYXlyR
      PVqMt+Ud8OaiZKdD4SYTcMrtMA5FVUKZP6MERXYKxtntM4BYWUTWAy/xQC6jQykF4Z1nDubc
      23wnM8Hdu3fb5rwPgqoomLEUzlKtgifv9jEcNzMzeNkc3ObdMM+mMwOYmQZVVKx99VeO705e
      fY/LnWdISCkoRB8l7Rqr/+xvkBxoKsmUKjiuq8DWczxYW3GkqGQGA1OYI9beK4Rc3h0IIeAG
      bzrymJWol1LoWnjrnR/CiDphQcMoNf2C6LtdTiFZphY5hTo9TO33lGJSNzc3cXh42DajWBhU
      G3X89tUr5GK50Cta2PdwyisYvv+w5XpD13B3NINPPttAzeEQM4vTKYkUEukBp3wNjmT9Eovz
      02YFRVebYvWXlVuZbkQackVpJkhzM7P8u1Na4zAV/G7acIMCNy//2ysJoYFF6sSDuusHuy0S
      4eEffyMySXDOce/ePZydnflmFg6DmtbAb1+/xHBs2PP5or5Au9q8Nd765GhLzWHOOfSLfdxf
      mscnn3yMubuTtodW1zWgoWNWGcLR738F5jh1paCeGoeuGy1GAkJIYH4dWWGNxWKOADhFcRY6
      NAwDuVwOl5fRSr2KcZgZvMPvAG6TutctavPL/jOBPXBCoIaoAikTu9vs2ckKECX78PLyMnbr
      Os7OCxgfyEXqh3OOb9++RoZkA68TqyTnHHlWgpJUoTYIMiQFgzPkG1eAVTKWqtbqqnNUaAM8
      vYT80Z5ZyELE9XMDP1kYsR1Qv/zlL/Ddo+/x+99/h8F4Bp8s/AQEBNf1a5z+5mvQlUVkJ2Zx
      nT9H4WgPfOae57NEkcfdxxLddDUxOYHXr15jeNg/AXC3cO9O1Ap4MAyjRde68VggQdQGMwAC
      32LV7kknxDxoLYrzRWUAL+uFV8iB/N3ixip2d16CnxUwkcmF1opPSnkc5i8wEK8jQePIxpsi
      B+MMhUYBjJmreipNoSgEoyvTWNvcQDFfxKv//AyGpuOzf/Ulkomk6QG2VjPGGBRFQaPRcFTU
      tOdIclApioKffv4ZHn60id/93SN7B8kkMlhIpPFq/wBlJQa6/QqjTHNkVZAhZ6ULgrwyy3Ot
      KqoVhXpz0kbYJM43ygAyEdrBaNSfCQRkeZJSGirno187MmRm8kvwu7i2grfKa/DjAiZD7gTj
      Azn8y09+Cs7N+JyXx0eoaQ0wgyCTiuMX6+t20txcegB1XcNztWJWNx8dxtSnd3Dy9VucvT/B
      4lozK0UztME7zMALnHNcXlwiCWeKdAKCeSWH2utD5IZncXR1AEVtJfQoC42fcYFSChjN02GZ
      TAbv3r7DwuJChwwRPCZR7MRrERXdicKON12KseUjxhg44YH54WVRyPybgkXMNeO1wgvi55z7
      e5U5cGd5EYfqAXAQjgkUSpG25PNMImkXsdAMHTFPnccp087Mz+Lw6R6qlarjKsY4QFnbBcP9
      nG+29zCaao1XYsywEmgBSsqM03HDi5Ci9O2FickJFPIF5C/z9hlu931iwXM7w7opbG6KQ5au
      ZFg7VUct9Ri2ZSekYhv1+b0mU7YiBVoVrG17+s4s6ksjOCx1psARYsbre/UTV2IYudRxtP/e
      tJUrCpZ/to7c+LBNDMKJF3X3e/P6LdJa1mb0s9IJjgoHyJcvcFzaR3Y5iULqGGufrVo7Yu9M
      jAYz64SZinjrKTw/HZAIf0TI6zsF5/xmdwChwXttTQDsDGJCcXGb1JrtRF8B5Huihh4IjE1N
      4BzA/stTzA+FKwgRamyEYD47hjdvT3E9lEVueBhT01P2WM0joZ1FUB69OcFEwkybUqoWMb4+
      hInJCVyXr3E/u4J4Im6PoRfeVRmUEFgLbYtZdHR0FDs7OxjKDXn6FFpNNqSj+sZ+UBQzOvTG
      d4Cg6bUVRaluGOC0MMgm0Za2pdXSuXI6Y0cY7zz4b2xqAnR9Gm+tOl+9xN3sOI63dx2fEeJi
      94jvnxEd70538e50F3lyirn5OaTTaUxMTiCZSnZUlTHstbKVS8D2JXCG+Tvz2NnZ8W3Pfocw
      xcpeEb8wKFBKQfYP9m/MCRA2Ea4oser2OMoMYp/+Z4a1s/iLRpQqUKjpnvcq6N0J8ucX0HZP
      MR8f6mnxwL38KeIf38WIdG7WFEvM0AJCSWQdQP5btun7LiJAsx4ciKOesNihw4qrDa01a4Q8
      //VaHe8P3+Pu3bstir0p9ig9q03nhRvfAYIeQjjHbHe6aweQV3NCiHVAxASlTkdZ081PHbnw
      240hLIbHRjH62T08vnoPPeAgRlTM58Zx/Oqd4zNqWakURYlE/AAc80EptU2aXsTrjrkyG2ht
      r1O4iR8wM3dMT03jqujvee+l59eNW1WC3aKKqqgOR4r7JXFunvU0DAO6FdobNDliqwsjLnUC
      RVVx78vP8P31cc+SwBJCMNWI4fT4pP3FHUAWd9y7A+fNBSVoXnpRXEQotTvbOyiVS45METeJ
      m9cBfAjPy+QlQhTEbwFThm9t0wtym0SyDzedSN1ViFdUBWtffoantdOe7QSTmRwunr/tW3VL
      sRN4vQMA1i6seM5Nt8QvdoF4PI5vv/kWyyvLZm0Hn1fAu9DXwiAyAwjCURTFEfwUBi3WHIe4
      EsHdTihURfF0XgVNlhAjFCr/NImhExBCoKgKVr74BC9YAQ09fCmkoDaXEiN4/s3jruKR/EAJ
      tQ+Tey5GlFjzQiOLXKFAzBJGAwMDgQ69fok9Mjp6OlmmjGJB8DN/dto/4OV9bN3ew6AbJgBM
      d//y5x/hBS9C6wHRDiZS2KQjePWrb1EKiExljOHl42f47f/1D5F3DALSNDT0Uc5uMXPCjMtJ
      Z9J2drnbQmQGcD+MHIsSBoRQKFY+HXn1oTT65BNC7LYUqpgJVyXLUdjVqxslSxbTKKVY/+Iz
      PEfBkVy2U6iKgofZGRS+fYlDqyaXG2+ePcdSPYlZZQDlcrRD5nIICO0T8fvpYApVUKlU7JKm
      t4WOGMCrCF2EFhxOHUG4nW61lBBbeZbRCVF3swLK87H2s0+xS69RbXTPBIQQLOcmMbBXwsvH
      z+zUH4wxvNzawViRIRVL4O7IJA5evemoffk8BiW0I0djUPte87r7ZhcLC53GAvUOHfsBhB4A
      NHOzREW72A6HMwymnV+8nMB7pMITUWAqsa1Om6D+ZIhnEddu/+4Rlo2MHRfULeq6huelEzPX
      JVExlx1DNpm2v89XyzgbUbB0f61vCnRYyHNnMNbiydY1Hfv7+1heaV+Cyi9QsRfoOhSiGzMi
      YFp03MWURbviKGTTbGc6hdSAUFdh6Wk7Zg8mIQRWFmrrQIc18eJ6ubJLszHY4cruPjZ+9im2
      fvcHLNYYBiVC7RQJNYaPhud8v88lM3j3fh/aypJnZOdNwq4E7/O9qPmlKEpgQqt+o2MG8HJz
      d9IGYxyKh/QjgtXchEUJAWccOgzre6ecKTyd8meyGdUiZXDhFAOxrB6Wk0kKz5ZjkVrGx5jd
      FgUBVZwhGuL3xuefYvubx1isoSdMIIPAGVqyVzjDzGcbt078AiKMw48RbrI8lR86tnH5xdtE
      36rCF9gW/Roi3Yh1r1htRKgDc0VMmmdJmxXJCaTYIFf/buIX/YmzA4ybEY7NColmv4YU7+5+
      no2ffow3yTquaq1Ja7uBe8bmhsZwvLN760Rl75ghrrttdM0AAByhC1EfihBiVw0PuldmNvdK
      K4i0uZVKlckNwSyt/crMqhs6NF2DbuiOYDkhUom2RB9eYxBFGdxOPM45Nj77CAeDRs+ZQIZC
      KRYxiDfbL26VuLj9P0HkxM7sKI9rYCC65arX6IoBBLqN1XA7yIL68+pLJkT5e7ES+SmEXm0J
      wjWYYceyc3Bb4Q8Ku+Cc27uDPF5hKl77+AFORxUUqv176YPJNKYKHHsdWIR6h2bslnA2iuLj
      kBZKwzBC5RjtJ3wZICxBB4UnR4VX7I971e+kn7D3+fXBGItkGhTiGNC0lgkmWN5cx/m4mTW6
      X8ilBjB21sDh272mFU0wttFkbBFP1WuYxoVWnUj4GyilIFaO/rBHO/sFTwYIsyLLkFe7TkGI
      MzuaSJkifm7CLS7G4QUWYT5M5d55pkEmhsX1eyhMpXB2Xex+wB7jPLq6wF4tj0qlKW7pQsyU
      Vud+wfQtUE/zpcwIuqbf+g7g2XtU4u82qtKrX3nihEzeDyYIsvTIMJgeuAu0uPst3cYvi9r8
      yiL2yRuw/Twms71JEbJfusB50sD4+ixWx8Zssc2O8myxqPXukIkb7doVhH+bJlCgSz/ATTlb
      hHnSrZz2Cu3aMtU4Yuf1DNIDHPdxZ11iN+aWFvCe7uHo3SWmsyMt34dBqVbB++s8FFVF9qMl
      bI70L99OL8E5h6ZpUFW1LwF/YXEjJ8K8okC9dosgz7BsabKdLLz/2zlg6QCUQGRw9op9Ctqh
      1Da1xN6/3UP8XR6z2Wgx8ZVGHTtqCSubZo1cUcvLPS6vI6BCQe31QXMvCBOyG7qm49WrV1hd
      Ww0cRz89wTdyHsBN/EEBdF72YzkBlKIoiKkxOxw7ajBe1HELz3BQaEU7861uGIEi4uzCHTQW
      RrBfOAs+NA3Lh2H9/aZ0hrWH95FMJj2Jv/kM3mbgdqbnfkONqZiZmUEhX7i1MdzKibAgx5dX
      tKnDrCmiRwm14oP6d17UbLf1UE0UojHvbZpHRdyUewebnp+FvjyG/dJ5qHYbugY2PoCYRy4f
      0abYLYNENuMGxFg/pxgBwenpKcbGe5dhIypuXAUPIh5CSMsKKFIByo4l+4VyDoMzcGamDoFX
      26SzUF+b0bzEHYQ5vuMehtPzLH8m+pucnca5qpppV9qIQ3ulC9z54n7L5/LB/yCIeewkDL0d
      whosCO3fGYSwUEUwV1jIQWFdg3jYVXwOYcsv1X65lnvRPhzvMZnthhqkVPu+HCu2Jepu4NWu
      qIYj2pqYmsSFomB/5xDzg6Pez8Q5NG5A9bChc+ZfXkhGu5T0nUAORxHPQwixk23JPRFK7MXg
      NiNXbzQtihfkLAViAuWwYvHjt6q1k2MZ544dwGYi8x/Oi+XosoCdQwR3UYkBOiUkU8cQXTaJ
      pniZR2P7Pe4OtDLB2XUR1cVhTM3OtLbHOQxXmke3PwJwKua9YgKxS7uTF3sSuPiaAy9fvMTG
      /Q1fRuizEkysqEZux2s0AzfQ0WofVUYWirGiKPaLcSvL7qRYsl4QBfJqJCvXIvFs82//Ce+0
      b++2WuOKAGBoZBiJ+/PYLTYTcOUrJXyX38f1nSFP4gecgX5eEGMWoR6dFhrx7JuQ8AYJibam
      pqZwdnbWs3FEgWomdWo/6CgcqEcoYh3Uj1/wmzuXaJSxUUJ6IsGJMN9eiBFeDkBCCIZHR6B8
      QvHy0Wus5CbxOl7Bgz/7eSCReY3lJi09nczH6Ogotre3MT423lOGDAMV8Jd/b2Li7Exl3FKK
      rGJqQhQCmnHjJtGbWdKiEp+DmdD9tm8TahvvMIFI4OVjiRGfS+ca5LHlRkZAf6pg63dbULOJ
      tuOSn1P823dsJFqWubCISjsNrYGBgQFUa1UkEu2fsZfwtAIJuzJjDNfX133z1LlfliizKX/v
      XvGBiKsM5466Uj2XJT2aE+N2F2nopG9CCEZGR0G/eIBv/u//F1MrdzEy0t5r3I4A+2l9ISCR
      i5jUG3VHCsabgicDCFu1YfTXUeI2J7rFH4MZLdVJOiWivvkJrJctIHLuCHCLAZshwk6dlhAa
      mFtUjHswm8Vnf/lL7O/vY3jYu+6YgEIVM+zYxwMrxtXPOKAou0Cj0YBhGIjFYh41ovtrJvWc
      eU3TUCwWcX193XGwkjtIzjNork1cjbxD9DNwqx0451YYhMd3FhtTakavCuJnnNmHcmRLQusj
      hF+pBwcHsbCwgK2trcDrhRLvFZsEwGFw6FeAoWm5aRow/JghlUrj9OQU8/Pz9jXuxGX9fO+B
      AmCnq7+ZgU21wxXsH6o4Dpq3ezDhrhciTGfJq7qfPLGqC4ecPD4zpqaZdNa0rji9vW7Pb+iR
      e8xPOp3G0tISHj9+HOp+TxGMN49+yrFVvYT5vqjD32Caj7njlVRrFaytr7WNl+oX+hIKQSwb
      OiXU+eNjymzXFjOa2SHkEF8vtBJabwLmiCVSOPsgdnpI26zImL3Ku5lATusetk8BWSxIpVJY
      W1vDkydP2nvWpVAO+R2I5xC6Vb+YQK4JJ0zNxByU+TkIGo1GUDN9xa3EAolkWKEPu5Cmwyuo
      trAZumAmdZVDGeSox05esvBYihfYHL+ZScIdcCYI3W+MYccgt+u2sSeTSdy7dw9PnjwJbEOM
      VQQQirlzh5b02+LndmzaJ8OIWdmyXC7fSGSqGx9EjbAwcHsz47G4I4sZ57CLKSjSMURB/LZM
      KaVljNKngGhXJm5CnG59OUiv22eWQwXcbSaTSayvr+Px48e+z+MmPEfbkqXGDFm4nZAESiku
      Li5uxQr0g2EA9yolVg6xqsVU1aEwiZXaTaii2IQfTKIHAOLYqYKSAJtjczRit+UmOriTcYXQ
      Ufx2AcCs7LixsYGnT59GWsUZZy3ZvUUc0U2jdFXC5OTkrZwO+yAYoLmKhwiGh9PC1FF/nhYS
      swOT6M2fKJmvHWEU1n3C+mG3QcyjgLL4F2bbFzuBn+4kmGBrayv0nMgGBXv+7YCYm4OiKHj9
      +jVGRkZuJSiO9mKrFhaSjgcRMg+9OyK0V6uVsOREJXoZhHiLG9S1K3Xqk5Dlda/7VVXF2toa
      tra2QhGSsKqJmgm2PtZnu7sblFKoqopavWZ/Zud06rAyZqT+e9GIoiiIx+M3IsMx3r1Vh7va
      EHJ9LyETK6UU8Vjc0ls6IzCviE43VFXFxsYGdnZ2OlpN++kwDIK8S8r+n5vYEXqyAzQaDVSr
      1b7LcObkdF8yR84yYecE7RFkpmrWLOhNOG+Y56aU2kxwm4fNw0LXzdxEt5UfiApT4Y8JBMTh
      lOtJm1Y7gvCFuCNWM0M6FxxEyGLlcx/8bwe3v2F1bRXbO9vQtO5LNvUTnHNMTU2hUCgglXSe
      a76J3ejHRfkWOikO3Q5yoQ/bzs4ZDMbsuHuRjc1PthWOKUH8ziS8sJPzOn6smC3hiBPJrzjn
      WF9fx87OTl8cTZHmrg0Pz9+Zh67pyOVyyA3lmrfxZkKBfoHKsteHDlNsub2YoHYQMrQdB2QV
      3PCzxfu04mgPQDMjtWFA15uH6wXh21mv5ZADazdYX1/H9s52z2txRSFKo433W1VUjI2NgVKK
      TCZjh0Sbz9+dta8dqPvC21KEwuJDHZoQczQrHAKIvqgQQsziHz732Yohhy9DyWKWcNBtbGxg
      e7v3TBAWhPhnAhGBebu7u/b4MplMT/oNpTMBwYO7KWbwZTzudE6J7fRDYFJZvrfTnuh6TwpJ
      t+u33Zjc87P5YBPPnz9HrVbzubO/kHcmGeKzu3fv2rFN8djNWBQBgLpflt/f/Ya5+qmtP7bj
      SAlcHb0gK4W99hvIKdRFCIHbRxEUsKfpmv3jLrAt4ouC+g+CXwzS+sb6rTIB0LrYcs6h6zqm
      pqYwPDyMR48eAYDDKiSHlovo4F7BUwn2WkFuE14ydDsikBVKOdd/NynB7rUkVgAAExlJREFU
      3W26HVPyv4MYoOV53O320Rt7//59PH/+/Fbr87qZoHhVRKPRwPLyMjKZDN69e+cIV5ED98zf
      vfMP+FqBug03uC0IIhUH893EJr6PGpGpG4ajGqZM9KbFx7lohGVU8+LWA0T9WoA4ODY3N7Gz
      s4NqtdqXPoJgGwokJjAMA4VCAYZhYGVlBUdHR47AvH7ppYSQ6GbQoICw24Ygbr9QZMBfFnVD
      1P1qmi25HVsvi1b2duzTZr/1ARlhFyzGGTbub+DFixe3qBg7mUDTNeTzefv7m5gzznl7BvAK
      ow26Nkx73UJuw1Gv2FVWNeh+P2XMYAY03TQ5inBht2lRXqUJnHPCuHPndL/ofiJqH/c379+Y
      TuDe4QTkzNX1Rh3lchmZTAaV6/7VUpPRlgHaxZ+4r5NPAIk4GPlYZC8sS7KTyVSKmoe/w7TN
      ufNkuiw2mYTtZHy3Mu3uR/7MKwvdTTBBJ6ITYwz3N+/j9evXfRWHFKpAVWOmQUNtHmYy9R8n
      45avy5ibn8P+/v6NRCiE6sHNtW652s8eLV/rTnHe6cPZiqhV/VFmvHZtykQi0hoyxqCzZuXH
      oGcPK4uG3TF7iU77YYxhbX0Ne3t7fWMC80AS9Qw/8RJJdc00Jcd9Ml/3dGzdNuDFBG6xwc88
      GHUnkBVY9+rstsC47+OcO4LTANimTL9RhFVKvb7zYoJ+MoNbKY/a18q9FRwcHNx42VI3bQCm
      KDs4OIhqpZUhe61rdsQA8iR7HfSWB+k0X/EWMSKsyMKsmBqv70RYgJ94InwMsvglRKeg/qMw
      ajsm6AfEvIi+osQ4uRcRzjmWl5dxfHyMYrH3xfu8+nf7A2TamJ6exuHhYd8dYqEZIIwO0Gnm
      g3YvTaz8nRCiOA8sW2+asn5wyEHUVdTLfm8TmdR2LyATv7uvMO/Ka/FhnGFxaRGnp6coFG6m
      aotbghDzThWKRqPR93QpfdMy3C/DSxSS9YMgYgxL/ALyCSc38Yu2gvqLolA6iIk7P3eIexDK
      e/e+FcdcwsOywpyeafe9kJ7fTWCMMSwuLeHs7Azn5+Gq1XSCdu8gpsZACIGm9zecOxIDhFmt
      213rJowwxB8WQs53H3AR7QSJPG4zZ1iGC+P8cqxyiFZz2G+c9hg5WnbeoGe0/wY808VwAJwz
      LCwuIJ/P33jacrcO128xMjQDMMZQrVahaVqoFcxLhPBTzrw+91J4g8B5M9uZTHCcN2PK27Uj
      HzwPA7cu42YGv7Y6eaXy7uGnVDs+dyvF4LYFjlhjEGPzypLBOcfC4gKuSlc9ZYIwtEMIsZOM
      9RuhGMAwDNtjGNV86bYMueElb0ddiTnnoNRpASLELM1jijwhV5Koqw1pFfHajdkkxvZwGxkY
      Y+Bt9BLx/ISYuZEopba448itahkF7HfiM1zOOe7cuYPiVREnJychRh0OYZhALLS3ogS7bfft
      MhL4oZ09XJbN5evCWGhaHsQt9lglSNy5b4LGGnVlJlKOn6imx6Br3eKYGF/Q9V4LjUn4IQ7i
      8NZ/CDblnOPunbuoVCo3Kg5pmoZYPNb3XcCXAWTZPBaLIR6Ph3ZMuDV7OR+oDLd5VI7W7FT2
      44B9ckpm2igm19B9cXEWwOWbCLjHlNuDRcHIC45rwfISxUT7boJq6cc2V0nXgGNufg7lchmn
      p6foBmIHtJ81YOGYmZ7B8dFxV/21g284tFvOlFfSMC/GvYuIrUz22Dbj4ZvnZNu17beTiHsM
      Kz7f3UYnJtQw4HDK09wcZOR+ZOL31R16oFOYO53zDk3XPJnDPb7ZuVlUqpWumED0LxsFfK+l
      pO+ZRnwZwKt8pdvK4V7lRbyPvOq7ZWPRhoi2lNsJA7eVgHNuiz/NCM2m6CA/Q68tCp7Kb4j7
      ZCVV/izMziebMcUsRI+v4o4zEvbYSfsid7Ozs6jX6x0zgTlfzn/7IZ1Oo1qtQlX75wsIpdF6
      mfdkwvYybQJoHtw2nBXSGWNgRjQZ369fOQuD2EXMv50pv+XdK+g5I1mATON+SxuB98AiWJ++
      g3QJN4MQ6d4ocItEUUXE6Zlp1Bv1nijGQc8qcpX2UxEOZABZhGmXHNZP1nYTrF16qcNTT3If
      oiKLW5k2x920cDiUwh6dczZleX/icy8WAOzK6F7EZo+tTeV2EVhmPltnCwiTZO+ohg3xVNPT
      0zAMo2udQB6XYyHlsHMaJeL9K5wXqUKMn/wtR3i6C2C0MADnkS08Xn3KUYXy6t86XicTuxnA
      y9oSxkITxurjFv1ClXkSSoXPczvEzhAii2cbcOotnWJicgKGYfTGRMrRzE5tLSyMMSQSCVxc
      XIAZTcNALzP5OVryIg5ZdPGy6sj3uK0P3sQWLazBDbfYI44r2ls5dYtrrYF3MnMyL4L20DO4
      dZ/YcYJWTveOE3nX8eMrVxNRV2+vnbpbJhifGAfnHEdHRxHG4bQKmv4KSDKd+YtzjpmZGbtt
      ZjCH6bkXcDCAe0XzW8VDK2twMkW3cTD2CiB0DEvOh0g+RT1EHFeogBgTtwpayCuhfY3LAiYX
      nQsyXzp0Ex/TbzsE6hDMzKAgTLw3DXP+Wz8fGzeTWh0eHoZqR1UUxNSYo9IPkf6TQQgxRaGw
      zsyIaGGAsBPrJdfr4igha6bss60x0urfycooVn7ZbS9OX3ntRoBVnRBOjyrQdPK436Z7VfRa
      Kf0Uf8/5CflcXmlb3O27F5SbJ38hnXm/r9GxUSiqgr29vdDtEUIQU2OtISwefYj6C50wvnun
      d7Tb7sYgRUkWQ+QX5fXyZNHHayBhGMHLySPa81IqHc9hCpauzG0IlLe5pa/IBCrPh58ya+8U
      ERYTv9xFoj1FsWr/ioF3uZsGwU/BFqfo/DA6OopkMond3d3QfQkxu0W/cZnV2xVHdLcpV+o0
      Te7eKXEiR4PKf/utvO5OZLu8F8LsBn5MKOrzytcJhVz0KTJFcM7sXSPMRIrVyN5BXIzmJlgv
      5mwHz3HIOhWRDA2WKOZVA/hDwcjoCAYHB/Hq1atQY5RFWvFv+V3rum6Xp5UZwQ/NzNqsaRjh
      zXbFgibQtj6AWwcAwokB4nO/NCWCqGS4rUjytcRD8yfEVe+LOMcmtydWGkMKWzDNjrSt98pW
      1tyiW5dE6Dd3bguNuML9Lnqd8c49Bu8v2j/z8MgwcsM57OzstGUC97t2M0S1WkU6nQbnZg0B
      +VC9HzjnIDCtRYwzWwwW38k5h6gsj7tNaoEKmYdC7PUwYbR298t0izaiYrjfvVZvAG9u0W5L
      lXmxqUgyQ/IXhNgRZKXWJj5LxHETajvdwHvsrXNtt+FyGrvv6Ve2CS+FX4wnDHK5HCYmJvDy
      5ctQO4HnQkAILi8vkclkQotAzcUJDsKXxyAvmi0+ZreiEeVFyjqB+DdzEbXfve6/FaveryB8
      r7CMJjEyiLy5XuKBSejUwfmMMQfDixgeP11HjM/BpBLjm6sOzB3FdZ/fc7ebW3tB4WiO3avJ
      D1MawmB2EIqi4MWLF1hdXfV9XhFxDADX19c4OjqyPxsYGEA2mwXQSgN+CKI30Y5do1j+grhe
      qNxg2A7d91FCQKjieazRqx9xhhcwzWViwF59ApYNmZtyvltJc/QnK7zc/LEVWhBQEuCWh7ml
      BqU9l58lbOVHuS33IkIseV++3l6B3f6APnCAn84Vtat0Jo2Z2Rk8f/4cq6urvn2pqmqfQFtf
      XwfQfGbqswj6QfGhNwGxMxAipUb0MvVFPdzu93kYeZlzbp/lFeKYvEq2U5DldmTnnVsnUBQF
      imr+2OVMFWr/tG77sH0JvkTRZg68ntVzlZKYSNYDvMRN8bn8fZg+w8Lv2k5YLZFIYGZ2JlAc
      opTi4OAA6+vrtgldWIeijl0san6QPfLUPiZHWh1eUeB3n9DKIRGyQx4TxeRU1a5d61BYLMLz
      i3MXcrDoi3MziEp2fskrt5/1Sja5yc8k/hmauNtUNHE/n+Na7hT4/XZhT9ncox/3ItAp7Du7
      UPqTySSmpqfw/Plzz7nknGNlZQVbW1t4//69I4S+I3oM+E5OsU5OT0+5oihOR1EHHXopTaIt
      gxmgVLGHJeRxoSALojHvJ4ipqkMuFATr1T5jDJqhtayW8n3ib/m3FwTRmGHaxM7kEMXkKCvM
      Xt/JK7nvKuuyhDDOzDgZSxQDmpKQLTJ57ODt2o2KMLux331ijI16A4eHh7h3757v9YVCAYVC
      AcvLy46Q+bA0KWjO7zvTs09bRSB3hoAoCNraTLe3Yhd+EKZRu7CbI97I27PrtlaJ7wzOHPE5
      8koubXNtxRf7OSiBoqigtD3DRIGXGONgUOqcf4cuYxG930ESL13KvduJheamIetFhBAkkglM
      T0/bfgKv95LL5dBoNLo8DhnAMBz2XLQwgBcBhUHQaiaLFvIJMT+xQ7TVbgvXrTggL9FNEFOQ
      9ckhaonkuiBQFCu6VelP8WzvL53pUkJbiJof2Lt4r5i2W/jtGMlUElNTpjgkXydgGIYdCi3o
      MqoOoFBqLhy81XQsSxyewXBRid/rIbwGxYkzLscvBgZoJX6Rq1/sGJquQ9M0KyCONWM9PMbk
      xUTylUJpcotMpvIeaRo8IZ45aG6ApkgjvyR7LG1EF/le/2s6e5hO9AhfRd9CMpXEzOwMXrx4
      4fi80Wjg6dOnuH//flcim0MaEGKja3E1DMPUAeStN6p3UZbP5a1Y/Fus+IJw27UtTxqHt+PF
      a+t0WpusmyxBmXOAc5NJ3FkSCAgMxjz1O8F4nEUUHYjTwSZW5Sj6hH2tJe7Iyn436ISgZGIO
      O/6wOZaqlSqOj49tE+nTp0/x4MEDe6xi3ro9G2wTPmdgzBS1FapAFeYmP8hc6Jerx71quh/e
      MAw0tAZkxTLMYL368EKrjN9kIJupGWsyA7h5Ogtihfcwrsv9CkcyD+kJtaw5pmjlvTC0gy2z
      s2ZbUe73Hlbwoft24+nknnZIpVOYmZnB6ekpxsbGkEqlPEXiKEqwG4wxx46vWkYfAFDbTaif
      HOe2OrgHLA45aIZmEaBpUO8kLaBXiIYfE8rjsIPweHNHEBPBDbHChntRNnMb4VdhznnH53YB
      SAzatF50A5mIbkJPCMus8WQc+Xwe+/v7dpFsoLnrdWvGBeDYhalihskbzAgXDernEPPTGeyt
      yxIdZBHCyzrR7ieM2CR+hGxnHnZpVYJaxs+Dzb4ykzfFEvjqBrIe0lObi7TLdkMMN6YgR+iH
      gGB2dhaUUhwfH7eItr2GCIvmnDdDIYImtp0M5nefbb/uknvdWrxbB5AnyWCmzC4sB+3kZnOV
      Jg4xQ+7H3T5kFcPPaiMYinNfQnD35RiPxz3yTkIoBe/S2tONKBUGYprC9sA5x/z8PIrFoiMb
      IdAd0zM5LBqtDGUzQFQN36sx+XuRkqQXipvXBMg+AvGdwZhNnFH65ZwDVoBUi/WFNM1wcn9+
      KchF5ocoirNMKF5z6lZACQBO/JmobX99Jn7AemeMeS4AbsIWFhvOuSMqQVzTDdo9a8cZh7wG
      aIsigL1j9EoMsCfF9eLFQRUh53e6UgiiFoxlmlVbFUZTk7H6kJx2gooF8bcV2SBZygDHjuW5
      A7jEAopmdCs3G2257tbhMxb3s4izwWIOBO24I3ajgnMzLCZoG+oq5ZbMBO5jkf2AeyeQZf5e
      vHh58imlMDgH4c0QBJHQihAKTrnnShZaYbNMsraFTbQliTeyKdk9TscuhWhzHtUk2ynEuLwM
      FDIY51BI02TupqtOwSzLXxC6KpEkJjIoarTnUyyJOLphtBxT7Fk3FoGKPr12PLee4Cb+KLKr
      6EvOPuGl78jj67ey2At4PX3Lc7nFSA/rYkeQLGh+8GWAILOnQFvi97inF2CMQdd1MMNombxe
      gaN1/F7P6jYHeynS/i+AeNbAEopuJ/MXxlom+gjdZsTrBQRxtyNk2YIHdOas84I4VBUEXxHI
      T8GKwp29UoLl9rpd9cKsyk1dw9vH4dVeGDOqo2/rc5GcVrYaCbEmDLy85X5E7j587nWP13fd
      QJ4fP8IWiZLdO6qwBvVsR/CA6l7BvLbcfsv2naDTl+Relb2eiXEOKtGV/FK8GMjxgjgc10oX
      AZw3ZXzzDshCYpRnalqEWp15nc6NqqjN0kRyGwHm3DDjbCfLizmVQ3Lccy4+j47ge1Q318m/
      RacfEuF3gzAvw7zQdN5x4h/b7yme+EyTLQqYWmHL/EYVdXotWop3bDDDNEdaZw/s73vWkz8Y
      Z6Cc2owgH4TqlAbDSCCejjCvKiK3DXtbFzE8PWrP83Puf52f+dfhcbZEGC9fQYvoAQ7OTWXs
      thRZWTwzDAagDwp2G9FTTnbsrukQlv4EExM4zz4EjV/1I/p2N94kHKtkFPeiRzthowo5AMKF
      zZ7bSXdlMUgWo2RrlPy9nzgpizC8CxGjWzCPMfbBdmdHtHpldnZbhbwWnShMEGX4qlfjsi02
      TBx76+B6q1DZkyOCwzgcHN4NKGn1/lI53kGAS88reXnt+8ybW8bc8izW6mR/x2FZfHryOJFh
      noO4gX48dEsZYh7T6bRv9o0wxouo9Pb/A3rW5eOGp3fLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
